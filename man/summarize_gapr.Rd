% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summarize_gapr.R
\name{summarize_gapr}
\alias{summarize_gapr}
\title{summarize_gapr function}
\usage{
summarize_gapr(
  obj,
  filter_var,
  filter_value,
  group_var,
  filter_func = (`==`),
  summary_func = list(mean = mean)
)
}
\arguments{
\item{obj}{A object of class \code{gapr}}

\item{filter_var}{A data variable from \code{obj} on which the data should be filtered}

\item{filter_value}{A value that can be used for comparison when filtering data}

\item{group_var}{A data variable from \code{obj} on which we want to group the
data}

\item{filter_func}{An optional operator written as a function giving the operation on which to filter,
given by \code{(`==`)} by default, such that \code{gapminder} dataset is filtered according
to whether \code{filter_var == filter_value}.}

\item{summary_func}{An optional function that we can pass to
\code{summary} to produce a summary of all columns of the \code{obj}.}
}
\value{
A \code{data.frame} which contains the summary of the filtered and grouped data.
}
\description{
summarize_gapr function that summarizes the data based on conditions
}
\details{
\code{summarize_gapr} function filters data from the \code{gapminder} dataset based on the condition,
groups it on some variable and returns the summary of all numeric variables.
}
\examples{
dat <- load_gapr()
summarize_gapr(dat, lifeExp, 50, country, filter_func = (`<`))

dat <- load_gapr("continent", "Asia")
summarize_gapr(dat, year, 1980, continent, filter_func = (`>=`));

}
